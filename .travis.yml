dist: focal
sudo: required
services:
- docker

env:
  global:
  - DOCKER_REPO=ubuntu
  - secure: "FkyBotzqHDBZGAvmgZ5D29nBVPUHYoVb4sz7nKtRFmTYoUDizedRgSU68AI87IsQCe50kilusilYSH0sufRvhWEOcGmHSvbpJ1OTdvudkhiIqecfxXZTBe0vL0GrsT73E3EDJfXoE8LNZIjr99dRpH2FJUhuJg8Yoqu8p4h78Js="
  matrix:
  - JOB_CODENAME=bionic JOB_ARCH=amd64
  - JOB_CODENAME=bionic JOB_ARCH=arm64
  - JOB_CODENAME=bionic JOB_ARCH=armhf
  - JOB_CODENAME=bionic JOB_ARCH=i386
  - JOB_CODENAME=bionic JOB_ARCH=ppc64el
  - JOB_CODENAME=bionic JOB_ARCH=s390x
  - JOB_CODENAME=focal JOB_ARCH=amd64
  - JOB_CODENAME=focal JOB_ARCH=arm64
  - JOB_CODENAME=focal JOB_ARCH=armhf
  - JOB_CODENAME=focal JOB_ARCH=ppc64el
  - JOB_CODENAME=focal JOB_ARCH=s390x
  - JOB_CODENAME=groovy JOB_ARCH=amd64
  - JOB_CODENAME=groovy JOB_ARCH=arm64
  - JOB_CODENAME=groovy JOB_ARCH=armhf
  - JOB_CODENAME=groovy JOB_ARCH=ppc64el
  - JOB_CODENAME=groovy JOB_ARCH=s390x
  - JOB_CODENAME=hirsute JOB_ARCH=amd64
  - JOB_CODENAME=hirsute JOB_ARCH=arm64
  - JOB_CODENAME=hirsute JOB_ARCH=armhf
  - JOB_CODENAME=hirsute JOB_ARCH=ppc64el
  - JOB_CODENAME=hirsute JOB_ARCH=s390x
  - JOB_CODENAME=trusty JOB_ARCH=amd64
  - JOB_CODENAME=trusty JOB_ARCH=arm64
  - JOB_CODENAME=trusty JOB_ARCH=armhf
  - JOB_CODENAME=trusty JOB_ARCH=i386
  - JOB_CODENAME=trusty JOB_ARCH=ppc64el
  - JOB_CODENAME=xenial JOB_ARCH=amd64
  - JOB_CODENAME=xenial JOB_ARCH=arm64
  - JOB_CODENAME=xenial JOB_ARCH=armhf
  - JOB_CODENAME=xenial JOB_ARCH=i386
  - JOB_CODENAME=xenial JOB_ARCH=ppc64el
  - JOB_CODENAME=xenial JOB_ARCH=s390x

matrix:
  fast_finish: true
  allow_failures:
  # https://github.com/vicamo/docker-brew-ubuntu-core/issues/32
  - env: JOB_CODENAME=hirsute JOB_ARCH=amd64

branches:
  only:
  - master

before_install:
- docker run --rm --privileged vicamo/binfmt-qemu:focal
- cat /proc/sys/fs/binfmt_misc/qemu-*

- ./update.sh "${JOB_CODENAME}/${JOB_ARCH}"
- test -z "$(git status -s)" || false

script:
- docker build -t repo:tag "${JOB_CODENAME}/${JOB_ARCH}"
- docker run -it --rm repo:tag apt-get update --quiet

- aliases="${JOB_CODENAME}"
- for variant in latest rolling devel; do
    if [ "${JOB_CODENAME}" = "$(< ${variant})" ]; then
      aliases="${aliases} ${variant}";
    fi;
  done
- version=$(wget -q -O - "http://archive.ubuntu.com/ubuntu/dists/${JOB_CODENAME}/Release" | awk '/^Version:/ {print $2}');
  aliases="${aliases} ${version}"
- for alias in ${aliases}; do
    docker tag repo:tag "${DOCKER_USER}/${DOCKER_REPO}:${alias}-${JOB_ARCH}";
    if [ "${JOB_ARCH}" = "amd64" ]; then
      docker tag repo:tag "${DOCKER_USER}/${DOCKER_REPO}:${alias}";
    fi;
    if [ "${alias}" = "latest" ]; then
      docker tag repo:tag "${DOCKER_USER}/${DOCKER_REPO}:${JOB_ARCH}";
    fi;
  done
- docker images --filter=reference="${DOCKER_USER}/${DOCKER_REPO}:*" --format="{{.Repository}}:{{.Tag}}"

after_success:
- if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
    docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}";
    for image in $(docker images --filter=reference="${DOCKER_USER}/${DOCKER_REPO}:*" --format="{{.Repository}}:{{.Tag}}"); do
      docker push $image;
    done
  fi
